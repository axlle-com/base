services:
    nginx:
        image: nginx:alpine
        environment:
            TZ: Europe/Moscow
        hostname: host.docker.internal
        restart: unless-stopped
        volumes:
            - .:/var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./storage/data/nginx/logs:/var/log/nginx
            - ./docker/php-fpm/sock:/sock
        ports:
            - "127.0.0.1:8080:80"
            - "127.0.0.1:10443:443"
        depends_on:
            - php-fpm

    php-fpm:
        build:
            context: "./docker/php-fpm"
        restart: unless-stopped
        environment:
            TZ: "Europe/Moscow"
            PHP_IDE_CONFIG: ${PHP_IDE_CONFIG:-serverName=docker}
            XDEBUG_TRIGGER: "yes"
        volumes:
            - .:/var/www
            - ./docker/php-fpm/php.ini:/usr/local/etc/php/php.ini
            - ./docker/php-fpm/sock:/sock
            - ./docker/php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - ./storage/data/php/logs:/var/log/php
        depends_on:
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy
        extra_hosts:
            - "host.docker.internal:host-gateway"

    queue:
        build:
            context: ./docker/queue
        restart: unless-stopped
        environment:
            TZ: Europe/Moscow
        volumes:
            - .:/var/www
            - ./docker/queue/php.ini:/usr/local/etc/php/php.ini
        depends_on:
            - php-fpm

    mysql:
        image: mysql:8-oracle
        restart: unless-stopped
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
            TZ: Europe/Moscow
        ports:
            - "127.0.0.1:3306:3306"
        volumes:
            - ./storage/data/mysql-data:/var/lib/mysql
            - ./docker/mysql/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            interval: 1s
            retries: 60
    redis:
        image: redis:7-alpine
        command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
        restart: unless-stopped
        environment:
            TZ: Europe/Moscow
        ports:
            - "127.0.0.1:6379:6379"
        volumes:
            - ./storage/data/redis-data:/data
        healthcheck:
            test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
